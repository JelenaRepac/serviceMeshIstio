services:
#  db:
#    image: postgres:14
#    container_name: airline-postgres
#    environment:
#      POSTGRES_DB: airline_users
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: admin
#    ports:
#      - "5432:5432"
#
#  flight-api:
#    build:
#      context: ../flight-api
#      dockerfile: Dockerfile
#    ports:
#      - "9090:9090"
#    volumes:
#      - ../flight-api/target:/app/target
#    networks:
#      - istio
#    deploy:
#      replicas: 1
#    depends_on:
#      - kafka
#    environment:
#      - SPRING_PROFILES_ACTIVE=prod   # change to prod in production
#
#  reservation-api:
#    build:
#      context: ../reservation-api
#      dockerfile: Dockerfile
#    ports:
#      - "9000:9000"
#    volumes:
#      - ../reservation-api/target:/app/target
#    networks:
#      - istio
#    deploy:
#      replicas: 1
#    depends_on:
#      - kafka
#    environment:
#      - SPRING_PROFILES_ACTIVE=prod
#      - email-service.url=http://notification-api:9090/email/send-confirmation
#
##  voucher-api:
##    build:
##      context: ../voucher-api
##      dockerfile: Dockerfile
##    ports:
##      - "8001:8001"
##    volumes:
##      - ../voucher-api/target:/app/target
##    networks:
##      - istio
##    deploy:
##      replicas: 1
##    depends_on:
##      - kafka
##    environment:
##      - SPRING_PROFILES_ACTIVE=prod
#
#  subscription-api:
#    build:
#      context: ../subscription-api
#      dockerfile: Dockerfile
#    ports:
#      - "8083:8083"
#    volumes:
#      - ../subscription-api/target:/app/target
#    networks:
#      - istio
#    deploy:
#      replicas: 1
#    depends_on:
#      - kafka
#    environment:
#      - SPRING_PROFILES_ACTIVE=prod
#
#  notification-api:
#    build:
#      context: ../notification-api
#      dockerfile: Dockerfile
#    ports:
#      - "8080:8080"
#    volumes:
#      - ../notification-api/target:/app/target
#    networks:
#      - istio
#    depends_on:
#      - kafka
#    environment:
#      - SPRING_PROFILES_ACTIVE=prod
#
#  auth-api:
#    build:
#      context: ../auth-api
#      dockerfile: Dockerfile
#    ports:
#      - "8000:8000"
#    volumes:
#      - ../auth-api/target:/app/target
#    networks:
#      - istio
#    depends_on:
#      - kafka
#    environment:
#      - SPRING_PROFILES_ACTIVE=prod

#  frontend:
#    build:
#      context: ../airlines-app
#      dockerfile: Dockerfile
#    container_name: airlines-app
#    ports:
#      - "4200:80"
#    networks:
#      - istio
#    depends_on:
#      - flight-api
#      - auth-api
#      - reservation-api
#      - subscription-api
#      - pricing-api
#      - voucher-api


  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - istio

#
  kafka:
    image: confluentinc/cp-kafka:7.6.0
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://host.docker.internal:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - istio

# LOCAL
#  kafka:
#    image: confluentinc/cp-kafka:7.6.0
#    ports:
#      - "9092:9092"
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    networks:
#      - istio


networks:
  istio:
    driver: bridge
